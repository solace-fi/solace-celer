/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MultichainWrapper,
  MultichainWrapperInterface,
} from "../../../contracts/utils/MultichainWrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [],
    name: "GovernanceLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pendingGovernance",
        type: "address",
      },
    ],
    name: "GovernancePending",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldGovernance",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newGovernance",
        type: "address",
      },
    ],
    name: "GovernanceTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "chainId",
        type: "uint64",
      },
    ],
    name: "ReceiverRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "chainId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "dst",
        type: "address",
      },
    ],
    name: "ReceiverSet",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_caller",
        type: "address",
      },
    ],
    name: "addCaller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
    ],
    name: "addReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "callerAt",
    outputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceIsLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "numsOfCaller",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numsOfReceiver",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingGovernance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "receiverAt",
    outputs: [
      {
        internalType: "uint64",
        name: "chainId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "receiverIndex",
        type: "uint256",
      },
    ],
    name: "removeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pendingGovernance_",
        type: "address",
      },
    ],
    name: "setPendingGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d2338038062001d238339818101604052810190620000379190620002ab565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620000ab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a2906200033e565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160146101000a81548160ff02191690831515021790555050620001648160036200016c60201b620011741790919060201c565b505062000360565b60006200019c836000018373ffffffffffffffffffffffffffffffffffffffff1660001b620001a460201b60201c565b905092915050565b6000620001b883836200021e60201b60201c565b6200021357826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905062000218565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002738262000246565b9050919050565b620002858162000266565b81146200029157600080fd5b50565b600081519050620002a5816200027a565b92915050565b600060208284031215620002c457620002c362000241565b5b6000620002d48482850162000294565b91505092915050565b600082825260208201905092915050565b7f7a65726f206164647265737320676f7665726e616e6365000000000000000000600082015250565b600062000326601783620002dd565b91506200033382620002ee565b602082019050919050565b60006020820190508181036000830152620003598162000317565b9050919050565b6119b380620003706000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063747293fb1161008c578063af05684711610066578063af056847146101db578063b4dc5aac146101f7578063ecbf861d14610213578063f39c38a014610231576100cf565b8063747293fb14610185578063a4a5cfed146101a1578063abbf4b17146101d1576100cf565b80630abb6035146100d45780630b71465c146100f05780631c9302211461010e578063238efcbc1461012c578063477d566b146101365780635aa6e67514610167575b600080fd5b6100ee60048036038101906100e99190611335565b61024f565b005b6100f86103a8565b604051610105919061137b565b60405180910390f35b6101166103b5565b60405161012391906113b1565b60405180910390f35b6101346103cc565b005b610150600480360381019061014b91906113f8565b610664565b60405161015e929190611457565b60405180910390f35b61016f610730565b60405161017c9190611480565b60405180910390f35b61019f600480360381019061019a9190611335565b610759565b005b6101bb60048036038101906101b691906113f8565b6108d8565b6040516101c89190611480565b60405180910390f35b6101d96108f5565b005b6101f560048036038101906101f091906113f8565b610b11565b005b610211600480360381019061020c91906114c7565b610e8d565b005b61021b611139565b604051610228919061137b565b60405180910390f35b61023961114a565b6040516102469190611480565b60405180910390f35b600160149054906101000a900460ff161561029f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029690611564565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610324906115d0565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd61ed858909d3cb796547804c47dc1550d27455f8a0037b6b487e462123923968160405161039d9190611480565b60405180910390a150565b6000600280549050905090565b6000600160149054906101000a900460ff16905090565b600160149054906101000a900460ff161561041c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041390611564565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a39061163c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561053e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610535906116a8565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce808160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516106599291906116c8565b60405180910390a150565b60008060006002848154811061067d5761067c6116f1565b5b906000526020600020016040518060400160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050806000015181602001519250925050915091565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160149054906101000a900460ff16156107a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a090611564565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610837576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082e906115d0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089e9061176c565b60405180910390fd5b6108bb8160036111a490919063ffffffff16565b6108d5576108d381600361117490919063ffffffff16565b505b50565b60006108ee8260036111d490919063ffffffff16565b9050919050565b600160149054906101000a900460ff1615610945576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093c90611564565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ca906115d0565b60405180910390fd5b60018060146101000a81548160ff02191690831515021790555073ffffffffffffffffffffffffffffffffffffffff6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073ffffffffffffffffffffffffffffffffffffffff600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce803373ffffffffffffffffffffffffffffffffffffffff604051610adb9291906116c8565b60405180910390a17fd572292b9e5d684b0719ae2d0e210513b477e303c975ed1c63b6fcac1607672760405160405180910390a1565b600160149054906101000a900460ff1615610b61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5890611564565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be6906115d0565b60405180910390fd5b8060028054905011610c36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2d906117d8565b60405180910390fd5b600060028281548110610c4c57610c4b6116f1565b5b906000526020600020016040518060400160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060026001600280549050610cff9190611827565b81548110610d1057610d0f6116f1565b5b9060005260206000200160028381548110610d2e57610d2d6116f1565b5b906000526020600020016000820160009054906101000a900467ffffffffffffffff168160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506000820160089054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160086101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506002805480610df757610df661185b565b5b60019003818190600052602060002001600080820160006101000a81549067ffffffffffffffff02191690556000820160086101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505090557fcea06f9f2bc78e7d1b24fb4ae56d46f703c06c45641f8ee24441d9331b2228e88160000151604051610e81919061188a565b60405180910390a15050565b600160149054906101000a900460ff1615610edd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed490611564565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f62906115d0565b60405180910390fd5b60008267ffffffffffffffff1611610fb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faf906118f1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611028576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101f9061195d565b60405180910390fd5b600260405180604001604052808467ffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050507f291689eb8100e4e7dd36e2ea308963360cdb6d3451d662194ac9d3f52f518d97828260405161112d929190611457565b60405180910390a15050565b600061114560036111ee565b905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061119c836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611203565b905092915050565b60006111cc836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611273565b905092915050565b60006111e38360000183611296565b60001c905092915050565b60006111fc826000016112c1565b9050919050565b600061120f8383611273565b61126857826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905061126d565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b60008260000182815481106112ae576112ad6116f1565b5b9060005260206000200154905092915050565b600081600001805490509050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611302826112d7565b9050919050565b611312816112f7565b811461131d57600080fd5b50565b60008135905061132f81611309565b92915050565b60006020828403121561134b5761134a6112d2565b5b600061135984828501611320565b91505092915050565b6000819050919050565b61137581611362565b82525050565b6000602082019050611390600083018461136c565b92915050565b60008115159050919050565b6113ab81611396565b82525050565b60006020820190506113c660008301846113a2565b92915050565b6113d581611362565b81146113e057600080fd5b50565b6000813590506113f2816113cc565b92915050565b60006020828403121561140e5761140d6112d2565b5b600061141c848285016113e3565b91505092915050565b600067ffffffffffffffff82169050919050565b61144281611425565b82525050565b611451816112f7565b82525050565b600060408201905061146c6000830185611439565b6114796020830184611448565b9392505050565b60006020820190506114956000830184611448565b92915050565b6114a481611425565b81146114af57600080fd5b50565b6000813590506114c18161149b565b92915050565b600080604083850312156114de576114dd6112d2565b5b60006114ec858286016114b2565b92505060206114fd85828601611320565b9150509250929050565b600082825260208201905092915050565b7f676f7665726e616e6365206c6f636b6564000000000000000000000000000000600082015250565b600061154e601183611507565b915061155982611518565b602082019050919050565b6000602082019050818103600083015261157d81611541565b9050919050565b7f21676f7665726e616e6365000000000000000000000000000000000000000000600082015250565b60006115ba600b83611507565b91506115c582611584565b602082019050919050565b600060208201905081810360008301526115e9816115ad565b9050919050565b7f2170656e64696e6720676f7665726e616e636500000000000000000000000000600082015250565b6000611626601383611507565b9150611631826115f0565b602082019050919050565b6000602082019050818103600083015261165581611619565b9050919050565b7f7a65726f20676f7665726e616e63650000000000000000000000000000000000600082015250565b6000611692600f83611507565b915061169d8261165c565b602082019050919050565b600060208201905081810360008301526116c181611685565b9050919050565b60006040820190506116dd6000830185611448565b6116ea6020830184611448565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f7a65726f20616464726573732063616c6c657200000000000000000000000000600082015250565b6000611756601383611507565b915061176182611720565b602082019050919050565b6000602082019050818103600083015261178581611749565b9050919050565b7f696e76616c696420696e64657800000000000000000000000000000000000000600082015250565b60006117c2600d83611507565b91506117cd8261178c565b602082019050919050565b600060208201905081810360008301526117f1816117b5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061183282611362565b915061183d83611362565b9250828210156118505761184f6117f8565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600060208201905061189f6000830184611439565b92915050565b7f696e76616c696420636861696e20696400000000000000000000000000000000600082015250565b60006118db601083611507565b91506118e6826118a5565b602082019050919050565b6000602082019050818103600083015261190a816118ce565b9050919050565b7f7a65726f20616464726573732072656365697665720000000000000000000000600082015250565b6000611947601583611507565b915061195282611911565b602082019050919050565b600060208201905081810360008301526119768161193a565b905091905056fea264697066735822122000bc685af8bd92c0ff83f8f879cdd7372f8e15e4c3b4c697be80773785a8c7b064736f6c63430008090033";

type MultichainWrapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultichainWrapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultichainWrapper__factory extends ContractFactory {
  constructor(...args: MultichainWrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _governance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MultichainWrapper> {
    return super.deploy(
      _governance,
      overrides || {}
    ) as Promise<MultichainWrapper>;
  }
  override getDeployTransaction(
    _governance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_governance, overrides || {});
  }
  override attach(address: string): MultichainWrapper {
    return super.attach(address) as MultichainWrapper;
  }
  override connect(signer: Signer): MultichainWrapper__factory {
    return super.connect(signer) as MultichainWrapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultichainWrapperInterface {
    return new utils.Interface(_abi) as MultichainWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultichainWrapper {
    return new Contract(address, _abi, signerOrProvider) as MultichainWrapper;
  }
}
